/* ==[ ATTENTION! ]== */

/* I've made use of native CSS variables and calculations to give you an idea
of how they work and how they can be useful. You don't need to adjust these
to complete the challenge. Feel free to take a look, then scroll down to
the start of the introduction. */

@import "fonts.css";

:root {
  /* Color Variables */

  --inky-black: #0d070a;
  --forest-green: #48594d;
  --navy-blue: #253b40;
  --dark-beige: #a69665;
  --rust-orange: #bf754b;
  --eggshell-white: #f0e2c4;

  /* Unit Variables*/

  --gap: 20px;

  --header-brand: 4rem;
  --header-brand-line-height: 7rem;

  --header-text: 1.5rem;
  --header-text-line-height: 2rem;

  --regular-text: 1rem;
  --regular-line-height: 1.5rem;

  /* Calculations */

  /* Calculating the header height */
  --header-height: calc(
    var(--header-brand-line-height) + var(--header-text-line-height) +
      (3 * var(--gap))
  );

  /* Calculating the nav height */
  --nav-height: calc(var(--regular-line-height) + (2 * var(--gap)));

  /* Calculating the exact margin required to put the main content
    right under the header and nav*/
  --main-content-margin-top: calc(var(--header-height) + var(--nav-height));
}

/* ==[ INTRODUCTION ]== */

/* !-- In short: Look at the selectors, then scroll down to the bottom of the file. 
Write your media queries there. --! */

/* Hint 1: Investigate! Take a good, long look at the previews to find out 
which elements need to change at what point. It's always useful to change
the size of your viewport or to take a look at the dev tools.
Your solution doesn't need to be pixel-perfect. If it looks close enough,
it's fine. Your main objective is to understand the concept of media queries.
Once you feel ready to write your media queries, scroll down further to where
you'll find the prompts to write your code.*/

/* Hint 2: You do NOT need to change the HTML to complete this challenge. */

/* Hint 3: Sometimes small changes lead to BIG results. */

/* Hint 4: Maybe you need a special selector to make changes to just one
element at some point. Perhaps take another look at your CSS Selectors handout
if you're unsure. */

*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  font-family: system-ui;
  background-color: var(--forest-green);
}

/* Header & Navigation */

.main-header {
  position: fixed;
  top: 0;
  width: 100%;
  background-color: var(--navy-blue);
}

.header-brand {
  padding: var(--gap);
  color: var(--dark-beige);
  font-family: "Pacifico";
  font-size: var(--header-brand);
  line-height: var(--header-brand-line-height);
  text-shadow: 4px 4px var(--forest-green);
}

.header-text {
  padding: 0 0 var(--gap) var(--gap);
  color: var(--dark-beige);
  font-size: var(--header-text);
  line-height: var(--header-text-line-height);
}

.navbar {
  display: flex;
  justify-content: space-around;
  position: fixed;
  top: var(--header-height);
  width: 100%;
  background-color: var(--dark-beige);
}

.navbar-link {
  padding: var(--gap);
  color: var(--navy-blue);
  width: 100%;
  text-decoration: none;
  text-align: center;
  font-size: var(--regular-text);
  line-height: var(--regular-line-height);
}

.navbar-link:hover {
  color: var(--inky-black);
  background-color: var(--eggshell-white);
}

/* Page Content */
/* Note: understanding what main-content and card-section do is
fairly essential to completing this challenge. */

.main-content {
  margin-top: var(--main-content-margin-top);
  padding: var(--gap) 0 var(--gap) 0;
  background: var(--navy-blue);
}

.intro-text {
  color: var(--dark-beige);
  font-size: var(--regular-text);
  line-height: var(--regular-text-line-height);
  width: 70%;
}

.card-section {
  width: 100%;
  display: flex;
  align-items: center;
  gap: var(--gap);
  flex-direction: column;
}

/* Product Card + Backgrounds */

.product-card {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 70%;
  height: 250px;
  font-size: 1.5rem;
  box-shadow: 0px 0px 10px 0px var(--inky-black);
}

.--forest {
  background-image: url("../img/forest.jpg");
  background-size: cover;
}

.--mountain {
  background-image: url("../img/mountain.jpg");
  background-size: cover;
}

.--river {
  background-image: url("../img/river.jpg");
  background-size: cover;
}

.--ocean {
  background-image: url("../img/ocean.jpg");
  background-size: cover;
}

.--desert {
  background-image: url("../img/desert.jpg");
  background-size: cover;
}

.card-title {
  padding: calc(var(--gap) / 4);
  text-decoration: none;
  color: var(--eggshell-white);
  background-color: var(--inky-black);
}

.card-title:hover {
  color: var(--inky-black);
  background-color: var(--eggshell-white);
}

/* Footer */

.main-footer {
  display: flex;
  gap: var(--gap);
  background: var(--inky-black);
  padding: var(--gap);
}

.footer-nav {
  display: flex;
  flex-direction: column;
}

.footer-link {
  text-decoration: none;
  color: var(--dark-beige);
}

.footer-nav p:first-child {
  color: var(--eggshell-white);
}

.contact-details {
  display: flex;
  flex-direction: column;
  color: var(--dark-beige);
}

.contact-details p:first-child {
  color: var(--eggshell-white);
}

/* ==[ MEDIA QUERIES & BREAKPOINTS ]== */

/* Now it's your turn! Here we're using media queries to partially overwrite our
CSS when certain conditions that we declare are met - such as a certain viewport 
width, etc. */

/* Media Query Tablet */
/* --- */
/* Replace this comment with your media query. */
/* --- */

/* Media Query Desktop */
/* --- */
/* Replace this comment with your media query. */
/* --- */
